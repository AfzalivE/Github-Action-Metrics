name: Collect Test Results

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**' # If your frontend files are in a specific directory

jobs:
  collect-test-results:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Run your Android unit tests
      - name: Run unit tests
        working-directory: ./android_project
        run: ./gradlew testDebugUnitTest

      # Parse the test results
      - name: Parse Test Results
        if: ${{ always() }}
        run: |
          mkdir -p test-results
          find . -type f -name "TEST-*.xml" -exec cp {} test-results/ \;
          python parse_test_results.py
          mv test_data.json docs/test_data.json

      # Commit and push the updated test_data.json
      - name: Commit Test Data
        if: ${{ always() }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add docs/test_data.json
          git commit -m "Update test data"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
